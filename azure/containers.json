{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentUrlBase": {
            "type": "string",
            "metadata": {
                "description": "BAT building block URL."
            }
        },
        "commonResourceTags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "decsription": "A object containing the common tags that should be applied to all Azure resources."
            }
        },
        "customDomains":{
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "decsription": "JSON array holding the custom domain name and certificate thumbprint; [{domainName: certificateThumbprint:}]"
            }
        },
        "containerImageReference": {
            "type": "string",
            "metadata": {
                "description": "The container image to pull from the server. Should be in image:tag format."
            }
        },
        "ciClockCpus": {
            "type": "string",
            "metadata": {
                "description": "The number of CPU cores allocated to the Clock service container instance."
            }
        },
        "ciClockMemory": {
            "type": "string",
            "metadata": {
                "description": "The amount of memory (in GB) allocated to the Clock service container instance."
            }
        },
        "ciWorkerCpus": {
            "type": "string",
            "metadata": {
                "description": "The number of CPU cores allocated to the Worker service container instance."
            }
        },
        "ciWorkerMemory": {
            "type": "string",
            "metadata": {
                "description": "The amount of memory (in GB) allocated to the Worker service container instance."
            }
        },
        "authorisedHosts": {
            "type": "string",
            "metadata": {
                "description": "Comma seperated list of FQDNs authorised to access the app."
            }
        },
        "customHostName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The top level common domain for the service, e.g. apply-for-teacher-training.service.gov.uk."
            }
        },
        "certificateThumbprint": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSL certificate thumbprint value."
            }
        },
        "containerInstanceNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "The name prefix for the background worker container instances."
            }
        },
        "appServiceName": {
            "type": "string",
            "metadata": {
                "description": "Azure App Service resource name."
            }
        },
        "appServicePlanName": {
            "type": "string",
            "metadata": {
                "description": "Azure App Serivce Plan resource name."
            }
        },
        "appEnvironmentVariables": {
            "type": "array",
            "metadata": {
                 "description": "Array of name/value objects for each environment variable required by the application"
            }
        },
        "dockerRegistryUrl": {
            "type": "string",
            "defaultValue": "https://index.docker.io",
            "metadata": {
                "description": "URL of the docker registry, eg: https://index.docker.io"
            }
        },
        "dockerRegistryUsername": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Username to login to the docker registry"
            }
        },
        "dockerRegistryPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password to login to the docker registry"
            }
        }
    },
    "variables": {
        "usePrivateDockerRegistry": "[not(and(empty(parameters('dockerRegistryUsername')), empty(parameters('dockerRegistryPassword'))))]",
        "dockerRegistrySettings":[
            {
                "name": "DOCKER_REGISTRY_SERVER_URL",
                "value": "[parameters('dockerRegistryUrl')]"
            },
            {
                "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                "value": "[parameters('dockerRegistryUsername')]"
            },
            {
                "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                "value": "[parameters('dockerRegistryPassword')]"
            }
        ],
        "appServiceRuntimeStack": "[concat('DOCKER|', parameters('containerImageReference'))]",
        "environmentVariablesWeb": "[concat(parameters('appEnvironmentVariables'), array(json('{\"name\": \"SERVICE_TYPE\", \"value\": \"web\"}')))]",
        "environmentVariablesClk": "[concat(parameters('appEnvironmentVariables'), array(json('{\"name\": \"SERVICE_TYPE\", \"value\": \"clock\"}')))]",
        "environmentVariablesWkr": "[concat(parameters('appEnvironmentVariables'), array(json('{\"name\": \"SERVICE_TYPE\", \"value\": \"worker\"}')))]",
        "appServiceAppSettings": "[if(variables('usePrivateDockerRegistry'), concat(variables('environmentVariablesWeb'), variables('dockerRegistrySettings')), variables('environmentVariablesWeb'))]",
        "dockerRegistryUrlForContainerInstance": "[if(equals(parameters('dockerRegistryUrl'), 'https://index.docker.io'), 'docker.io', parameters('dockerRegistryUrl'))]"
    },
    "resources": [
        {
            "name": "app-service",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('deploymentUrlBase'), 'app-service-linux.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "resourceTags": {
                        "value": "[parameters('commonResourceTags')]"
                    },
                    "appServiceName": {
                        "value": "[parameters('appServiceName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "appServicePlanName": {
                        "value": "[parameters('appServicePlanName')]"
                    },
                    "customDomains": {
                        "value": "[parameters('customDomains')]"
                    },
                    "runtimeStack": {
                        "value": "[variables('appServiceRuntimeStack')]"
                    },
                    "appServiceAppSettings": {
                        "value": "[json(replace(string(variables('appServiceAppSettings')), 'secureValue', 'value'))]"
                    },
                    "healthCheckPath":{
                        "value": "/check/health"
                    }
                }
            }
        },
        {
            "name": "container-instances-worker",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('deploymentUrlBase'), 'container-instances.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "resourceTags": {
                        "value": "[parameters('commonResourceTags')]"
                    },
                    "containerInstanceName": {
                        "value": "[concat(parameters('containerInstanceNamePrefix'), '-wkr')]"
                    },
                    "containerName": {
                        "value": "[concat(parameters('containerInstanceNamePrefix'), '-wkr')]"
                    },
                    "imageName": {
                        "value": "[parameters('containerImageReference')]"
                    },
                    "numberCpuCores": {
                        "value": "[parameters('ciWorkerCpus')]"
                    },
                    "memory": {
                        "value": "[parameters('ciWorkerMemory')]"
                    },
                    "command": {
                        "value": ["/bin/sh",  "-c", "bundle exec sidekiq -c 5 -C config/sidekiq.yml"]
                    },
                    "environmentVariables": {
                        "value": "[variables('environmentVariablesWkr')]"
                    },
                    "dockerRegistryUrl": {
                        "value": "[variables('dockerRegistryUrlForContainerInstance')]"
                    },
                    "dockerRegistryUsername": {
                        "value": "[parameters('dockerRegistryUsername')]"
                    },
                    "dockerRegistryPassword": {
                        "value": "[parameters('dockerRegistryPassword')]"
                    }
                }
            }
        },
        {
            "name": "container-instances-clock",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('deploymentUrlBase'), 'container-instances.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "resourceTags": {
                        "value": "[parameters('commonResourceTags')]"
                    },
                    "containerInstanceName": {
                        "value": "[concat(parameters('containerInstanceNamePrefix'), '-clk')]"
                    },
                    "containerName": {
                        "value": "[concat(parameters('containerInstanceNamePrefix'), '-clk')]"
                    },
                    "imageName": {
                        "value": "[parameters('containerImageReference')]"
                    },
                    "numberCpuCores": {
                        "value": "[parameters('ciClockCpus')]"
                    },
                    "memory": {
                        "value": "[parameters('ciClockMemory')]"
                    },
                    "command": {
                        "value": ["/bin/sh", "-c", "bundle exec clockwork config/clock.rb"]
                    },
                    "environmentVariables": {
                        "value": "[variables('environmentVariablesClk')]"
                    },
                    "dockerRegistryUrl": {
                        "value": "[variables('dockerRegistryUrlForContainerInstance')]"
                    },
                    "dockerRegistryUsername": {
                        "value": "[parameters('dockerRegistryUsername')]"
                    },
                    "dockerRegistryPassword": {
                        "value": "[parameters('dockerRegistryPassword')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "appServiceIpAddresses": {
            "type": "array",
            "value": "[reference('app-service').outputs.possibleOutboundIpAddresses.value]"
        },
        "envVarsAsProvided": {
            "type": "array",
            "value": "[parameters('appEnvironmentVariables')]"
        },
        "envVarsAsChanged": {
            "type": "array",
            "value": "[json(replace(string(parameters('appEnvironmentVariables')), 'secureValue', 'value'))]"
        }
    }
}
